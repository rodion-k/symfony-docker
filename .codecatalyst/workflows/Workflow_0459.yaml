Name: Workflow_0459
SchemaVersion: "1.0"

# Optional - Set automatic triggers.
Triggers:
  - Type: PUSH
    Branches:
      - main
Actions:
  Build_d1:
    # Identifies the action. Do not modify this value.
    Identifier: aws/build@v1.0.0

    # Specifies the source and/or artifacts to pass to the action as input.
    Inputs:
      # Optional
      Sources:
        - WorkflowSource # This specifies that the action requires this Workflow as a source

    Outputs:
      # Optional; Automatically discover reports for popular test frameworks
      AutoDiscoverReports:
        Enabled: true
        # Use as prefix for the report files
        ReportNamePrefix: rpt

    # Defines the action's properties.
    Configuration:
      # Required - Steps are sequential instructions that run shell commands
      Steps:
        - Run: echo "Hello, World!"
        - Run: echo "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>" >> report.xml
        - Run: echo "<testsuite tests=\"1\" name=\"TestAgentJunit\" >" >> report.xml
        - Run: echo "<testcase classname=\"TestAgentJunit\" name=\"Dummy
            Test\"/></testsuite>" >> report.xml
  BuildAndPushDockerImages_4c:
    # Identifies the action. Do not modify this value.
    Identifier: aws/github-actions-runner@v1.0.0

    # Specifies the source and/or artifacts to pass to the action as input.
    Inputs:
      # Optional
      Sources:
        - WorkflowSource # This specifies that the action requires this Workflow as a source

    # Defines the action's properties.
    Configuration:
      # Required - Steps are sequential instructions that run shell commands
      # Action URL: https://github.com/marketplace/actions/build-and-push-docker-images
      # Please visit the action URL to look for examples on the action usage.
      # Be aware that a new version of the action could be available on GitHub.
      Steps:
        - uses: docker/build-push-action@v4.1.1
          with:
            add-hosts: ' ' # Optional; description: List of a customs host-to-IP mapping (e.g., docker:10.180.0.1)
            allow: ' ' # Optional; description: List of extra privileged entitlement (e.g., network.host,security.insecure)
            attests: ' ' # Optional; description: List of attestation parameters (e.g., type=sbom,generator=image)
            build-args: ' ' # Optional; description: List of build-time variables
            build-contexts: ' ' # Optional; description: List of additional build contexts (e.g., name=path)
            builder: ' ' # Optional; description: Builder instance
            cache-from: ' ' # Optional; description: List of external cache sources for buildx (e.g., user/app:cache, type=local,src=path/to/dir)
            cache-to: ' ' # Optional; description: List of cache export destinations for buildx (e.g., user/app:cache, type=local,dest=path/to/dir)
            cgroup-parent: ' ' # Optional; description: Optional parent cgroup for the container used in the build
            context: ' ' # Optional; description: Build's context is the set of files located in the specified PATH or URL
            file: ' ' # Optional; description: Path to the Dockerfile
            labels: ' ' # Optional; description: List of metadata for an image
            load: ' ' # Optional; description: Load is a shorthand for --output=type=docker
            network: ' ' # Optional; description: Set the networking mode for the RUN instructions during build
            no-cache: ' ' # Optional; description: Do not use cache when building the image
            no-cache-filters: ' ' # Optional; description: Do not cache specified stages
            outputs: ' ' # Optional; description: List of output destinations (format: type=local,dest=path)
            platforms: ' ' # Optional; description: List of target platforms for build
            provenance: ' ' # Optional; description: Generate provenance attestation for the build (shorthand for --attest=type=provenance)
            pull: ' ' # Optional; description: Always attempt to pull all referenced images
            push: ' ' # Optional; description: Push is a shorthand for --output=type=registry
            sbom: ' ' # Optional; description: Generate SBOM attestation for the build (shorthand for --attest=type=sbom)
            secrets: ' ' # Optional; description: List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
            secret-files: ' ' # Optional; description: List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)
            shm-size: ' ' # Optional; description: Size of /dev/shm (e.g., 2g)
            ssh: ' ' # Optional; description: List of SSH agent socket or keys to expose to the build
            tags: ' ' # Optional; description: List of tags
            target: ' ' # Optional; description: Sets the target stage to build
            ulimit: ' ' # Optional; description: Ulimit options (e.g., nofile=1024:1024)
            github-token: ' ' # Optional; description: GitHub Token used to authenticate against a repository for Git context
